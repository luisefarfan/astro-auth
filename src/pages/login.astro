---
import AuthLayout from '@/layouts/AuthLayout.astro';

const email = Astro.cookies.get('email');
const rememberMe = !!email;
---

<AuthLayout>
  <div class="flex justify-center self-center z-10">
    <form class="p-12 bg-white mx-auto rounded-2xl w-100">
      <div class="mb-4">
        <h3 class="font-semibold text-2xl text-gray-800">Sign In</h3>
        <p class="text-gray-500">Please sign in to your account.</p>
      </div>
      <div class="space-y-5">
        <div class="space-y-2">
          <label class="text-sm font-medium text-gray-700 tracking-wide"
            >Email</label
          >
          <input
            class="w-full text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
            type="email"
            name="email"
            value={email?.value ?? ''}
            placeholder="mail@gmail.com"
          />
        </div>
        <div class="space-y-2">
          <label class="mb-5 text-sm font-medium text-gray-700 tracking-wide">
            Password
          </label>
          <input
            class="w-full content-center text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
            type="password"
            name="password"
            placeholder="Enter your password"
          />
        </div>
        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <input
              id="remember_me"
              name="remember_me"
              type="checkbox"
              checked={rememberMe}
              class="h-4 w-4 bg-blue-500 focus:ring-blue-400 border-gray-300 rounded"
            />
            <label for="remember_me" class="ml-2 block text-sm text-gray-800">
              Remember me
            </label>
          </div>
          <div class="text-sm">
            <a href="/register" class="text-green-400 hover:text-green-500">
              Don't have an account?
            </a>
          </div>
        </div>
        <div>
          <button
            id="btnSubmit"
            type="submit"
            class="w-full flex justify-center bg-green-400 hover:bg-green-500 disabled:bg-gray-300 text-gray-100 p-3 rounded-full tracking-wide font-semibold shadow-lg cursor-pointer transition ease-in duration-500"
          >
            Sign in
          </button>

          <hr class="my-3" />

          <button
            id="btnGoogle"
            type="button"
            class="w-full flex justify-center bg-red-400 hover:bg-red-500 disabled:bg-gray-300 text-gray-100 p-3 rounded-full tracking-wide font-semibold shadow-lg cursor-pointer transition ease-in duration-500"
          >
            Acceder con Google
          </button>
        </div>
      </div>
      <div class="pt-5 text-center text-gray-400 text-xs">
        <span>
          Copyright Â© 2021-{new Date().getFullYear()}
          <a
            href="https://codepen.io/uidesignhub"
            rel=""
            target="_blank"
            title="Ajimon"
            class="text-green hover:text-green-500">AJI</a
          ></span
        >
      </div>
    </form>
  </div>
</AuthLayout>

<script>
  import { firebase } from '@/firebase/config';
  import { actions } from 'astro:actions';
  import { GoogleAuthProvider, signInWithPopup } from 'firebase/auth';
  import Swal from 'sweetalert2';

  const form = document.querySelector('form');
  const btnSubmit = document.querySelector('#btnSubmit');
  form?.addEventListener('submit', async (e: SubmitEvent) => {
    e.preventDefault();
    btnSubmit?.setAttribute('disabled', 'disabled');

    const data = new FormData(e.target as HTMLFormElement);
    const response = await actions.login(data);

    if (response.error) {
      Swal.fire({
        icon: 'error',
        title: 'Something went wrong!',
        text: response.error.message,
      });

      btnSubmit?.removeAttribute('disabled');
      return;
    }

    if (response.data.success) {
      window.location.replace('/protected');
    }
  });

  document.querySelector('#btnGoogle')?.addEventListener('click', async () => {
    const provider = new GoogleAuthProvider();

    try {
      const credentials = await signInWithPopup(firebase.auth, provider);

      const { error } = await actions.loginWithGoogle(credentials);

      if (error) {
        Swal.fire({
          icon: 'error',
          title: 'Something went wrong!',
          text: error.message,
        });
        return;
      }

      window.location.replace('/protected');
    } catch (error) {
      console.error(error);
    }
  });
</script>
